version: '3.4'
services:
  postgres:
    image: "postgres:15.3"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DATABASE_POSTGRES_PASSWORD} # for the docker, in the code standard naming "DATABASE_*"
    ports:
      - "5432:5432"
    volumes:
      - ./data_reader/database/pg_data:/var/lib/postgresql/data_reader # The database. This will increase in size with time. !!! DON'T COMMIT !!!
      - ./data_reader/database/pg_config:/etc/postgresql/ # The config files. !!! DON'T COMMIT !!!
    command: postgres -c config_file=/etc/postgresql/postgres.conf

  weaviate:
    image: semitechnologies/weaviate:1.9.1
    restart: unless-stopped
    ports:
     - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 20
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: "./data_reader"
      DEFAULT_VECTORIZER_MODULE: text2vec-transformers
      ENABLE_MODULES: text2vec-transformers
      TRANSFORMERS_INFERENCE_API: http://t2v-transformers:8080
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - ./data_reader/semantic_filters/embeddings:/data_reader
    depends_on:
      - t2v-transformers

  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-paraphrase-multilingual-MiniLM-L12-v2
    restart: unless-stopped
    environment:
      ENABLE_CUDA: 0
      # NVIDIA_VISIBLE_DEVICES: all # enable if running with CUDA

  yaserviceru:
    build:
      context: .
      dockerfile: Dockerfile
    #image: osuzdalev/yaserviceru:beta
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8081:80"
    depends_on:
      - postgres
      - weaviate
      - t2v-transformers
    volumes:
      - ./data_reader/app/logs.log:/app/data_reader/app/logs.log
      - ./data_reader/app/persistence:/app/data_reader/app/persistence